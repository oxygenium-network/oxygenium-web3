{
  "folderName": "docker",
  "folderPath": ".autodoc/docs/json/docker",
  "url": "https://github.com/oxygenium/oxygenium-web3/.autodoc/docs/json/docker",
  "files": [
    {
      "fileName": "devnet.conf",
      "filePath": "docker/devnet.conf",
      "url": "https://github.com/oxygenium/oxygenium-web3/docker/devnet.conf",
      "summary": "This code sets various configuration parameters for the Alephium blockchain network. The `oxygenium.genesis.allocations` array specifies the initial distribution of tokens among a set of addresses. Each object in the array contains an `address` field, which is the recipient of the tokens, an `amount` field, which specifies the number of tokens to be allocated, and a `lock-duration` field, which specifies the duration for which the tokens will be locked. \n\nThe `oxygenium.consensus` object specifies the consensus parameters for the network. `num-zeros-at-least-in-hash` specifies the number of leading zeros required in the hash of a block to be considered valid. `block-target-time` specifies the target time between blocks, and `uncle-dependency-gap-time` specifies the maximum time difference between the block and its uncle blocks. \n\nThe `oxygenium.network` object specifies the network parameters. `leman-hard-fork-timestamp` specifies the timestamp for the Leman hard fork, which is a network upgrade. `network-id` specifies the network ID, which is used to differentiate between different networks. `discovery.bootstrap` specifies the list of bootstrap nodes for the network. \n\nThe `oxygenium.wallet` object specifies the wallet parameters. `locking-timeout` specifies the duration for which the wallet will be locked after a successful unlock. \n\nThe `oxygenium.mempool` object specifies the mempool parameters. `auto-mine-for-dev` specifies whether to automatically mine blocks for development purposes. \n\nThe `oxygenium.node` object specifies the node parameters. `event-log.enabled` specifies whether to enable event logging, and `event-log.index-by-tx-id` and `event-log.index-by-block-hash` specify whether to index events by transaction ID and block hash, respectively. \n\nThe `oxygenium.mining` object specifies the mining parameters. `miner-addresses` specifies the list of mining addresses that will be used to mine blocks. \n\nOverall, this code sets various configuration parameters for the Alephium blockchain network, which are used to specify the initial token distribution, consensus rules, network parameters, wallet parameters, mempool parameters, node parameters, and mining parameters. These parameters are essential for the proper functioning of the network and can be modified as needed to suit the requirements of the network. \n\nExample usage:\n\n```javascript\nconst oxygenium = require('oxygenium-web3');\n\n// Modify the genesis allocations\noxygenium.genesis.allocations = [\n  {\n    address: \"1DrDyTr9RpRsQnDnXo2YRiPzPW4ooHX5LLoqXrqfMrpQH\",\n    amount: 1000000000000000000000000,\n    \"lock-duration\": \"0 seconds\"\n  },\n  {\n    address: \"14UAjZ3qcmEVKdTo84Kwf4RprTQi86w2TefnnGFjov9xF\",\n    amount: 1000000000000000000000000,\n    \"lock-duration\": \"0 seconds\"\n  }\n];\n\n// Modify the consensus parameters\noxygenium.consensus.num-zeros-at-least-in-hash = 1;\noxygenium.consensus.block-target-time = 15 * 1000; // 15 seconds\noxygenium.consensus.uncle-dependency-gap-time = 5 * 60; // 5 minutes\n\n// Modify the network parameters\noxygenium.network.leman-hard-fork-timestamp = 1643500800000; // GMT: 30 January 2022 00:00:00\noxygenium.network.network-id = 5;\noxygenium.discovery.bootstrap = [\"node1.example.com\", \"node2.example.com\"];\n\n// Modify the wallet parameters\noxygenium.wallet.locking-timeout = 30 * 60 * 1000; // 30 minutes\n\n// Modify the mempool parameters\noxygenium.mempool.auto-mine-for-dev = false;\n\n// Modify the node parameters\noxygenium.node.event-log.enabled = false;\noxygenium.node.event-log.index-by-tx-id = false;\noxygenium.node.event-log.index-by-block-hash = false;\n\n// Modify the mining parameters\noxygenium.mining.miner-addresses = [\"1FsroWmeJPBhcPiUr37pWXdojRBe6jdey9uukEXk1TheA\"];\n```",
      "questions": "1. What is the purpose of the `oxygenium.genesis.allocations` array?\n   - The `oxygenium.genesis.allocations` array specifies the initial allocation of tokens to specific addresses when the blockchain is first created.\n\n2. What is the significance of the `oxygenium.network.leman-hard-fork-timestamp` value?\n   - The `oxygenium.network.leman-hard-fork-timestamp` value specifies the timestamp for a hard fork in the network, which will occur on January 30th, 2022 at 00:00:00 GMT.\n\n3. What is the purpose of the `oxygenium.mining.miner-addresses` array?\n   - The `oxygenium.mining.miner-addresses` array specifies a list of arbitrary mining addresses that can be used for mining blocks on the blockchain."
    },
    {
      "fileName": "docker-compose.yml",
      "filePath": "docker/docker-compose.yml",
      "url": "https://github.com/oxygenium/oxygenium-web3/docker/docker-compose.yml",
      "summary": "This code is a Docker Compose file that defines three services: redis, relay, and oxygenium. Docker Compose is a tool for defining and running multi-container Docker applications. \n\nThe redis service uses the Redis image and exposes port 6379. It depends on the oxygenium service being healthy, which is defined later in the file. The healthcheck for this service runs the command \"redis-cli ping\" every 5 seconds, with a timeout of 5 seconds, and retries 5 times.\n\nThe relay service uses a custom Docker image and exposes port 5555. It depends on the redis service being healthy. The environment variable REDIS_URL is set to \"redis://redis:6379/0\", which means that the relay service will use the Redis service as its backend. The healthcheck for this service runs the command \"wget -qO- http://relay:5000/health\" every 5 seconds, with a timeout of 5 seconds, and retries 5 times.\n\nThe oxygenium service uses the Alephium image and exposes several ports. It sets the ALEPHIUM_LOG_LEVEL and ALEPHIUM_ENABLE_DEBUG_LOGGING environment variables. It also mounts the file \"devnet.conf\" as \"/oxygenium-home/.oxygenium/user.conf\" inside the container. The healthcheck for this service runs the command \"curl --fail http://127.0.0.1:22973/wallets || exit 1\" every 3 seconds, with a timeout of 45 seconds, and retries 10 times.\n\nOverall, this Docker Compose file defines a multi-container application that includes a Redis backend, a relay service, and an Alephium node. It ensures that the services are started in the correct order and that they are healthy before allowing other services to depend on them. This file can be used to deploy the application on a Docker host, such as a cloud provider or a local machine.",
      "questions": "1. What services are being used in this project and how are they configured?\n- The project is using Redis, Relay, and Alephium services. Redis is configured to run on port 6379 and is dependent on the Alephium service being healthy. Relay is using a custom Docker image and is configured to run on port 5555, with a healthcheck that tests the health endpoint of the Relay service. Alephium is using a custom Docker image and is configured to run on multiple ports, with a healthcheck that tests the wallets endpoint of the Alephium service.\n\n2. What versions of the services are being used in this project?\n- The Redis service is using version 6-alpine of the Redis image. The Relay service is using a custom Docker image with the tag hc-dev-3. The Alephium service is using version 2.3.1 of the oxygenium/dev-oxygenium image.\n\n3. What environment variables are being set for the Alephium service?\n- The Alephium service is setting the environment variables ALEPHIUM_LOG_LEVEL and ALEPHIUM_ENABLE_DEBUG_LOGGING to DEBUG and true, respectively. These variables control the logging level and enable debug logging for the Alephium service."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/docker` folder contains two important files for the Alephium blockchain network: `devnet.conf` and `docker-compose.yml`. These files are essential for configuring the network and deploying it using Docker Compose.\n\n`devnet.conf` is a configuration file that sets various parameters for the Alephium blockchain network, such as initial token distribution, consensus rules, network parameters, wallet parameters, mempool parameters, node parameters, and mining parameters. Developers can modify these parameters to suit the requirements of their network. For example, they can change the genesis allocations, consensus parameters, or network parameters by modifying the corresponding objects in the `devnet.conf` file.\n\n`docker-compose.yml` is a Docker Compose file that defines a multi-container application consisting of a Redis backend, a relay service, and an Alephium node. This file ensures that the services are started in the correct order and that they are healthy before allowing other services to depend on them. Developers can use this file to deploy the Alephium blockchain network on a Docker host, such as a cloud provider or a local machine.\n\nHere's an example of how to use these files to deploy the Alephium blockchain network:\n\n1. Modify the `devnet.conf` file to set the desired configuration parameters for your network.\n2. Build the custom Docker image for the relay service, if necessary.\n3. Run `docker-compose up` in the same directory as the `docker-compose.yml` file to start the Alephium blockchain network.\n\n```bash\n# Modify the devnet.conf file\n# Build the custom Docker image for the relay service (if necessary)\n# Start the Alephium blockchain network using Docker Compose\ndocker-compose up\n```\n\nIn summary, the `.autodoc/docs/json/docker` folder contains essential files for configuring and deploying the Alephium blockchain network. Developers can modify the `devnet.conf` file to set various configuration parameters and use the `docker-compose.yml` file to deploy the network using Docker Compose.",
  "questions": ""
}