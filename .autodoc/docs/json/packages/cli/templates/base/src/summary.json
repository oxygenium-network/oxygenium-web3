{
  "folderName": "src",
  "folderPath": ".autodoc/docs/json/packages/cli/templates/base/src",
  "url": "https://github.com/oxygenium/oxygenium-web3/.autodoc/docs/json/packages/cli/templates/base/src",
  "files": [
    {
      "fileName": "token.ts",
      "filePath": "packages/cli/templates/base/src/token.ts",
      "url": "https://github.com/oxygenium/oxygenium-web3/packages/cli/templates/base/src/token.ts",
      "summary": "The code is a script that demonstrates how to use the `@oxygenium/web3` library to interact with a smart contract deployed on the Oxygenium blockchain. Specifically, the script withdraws tokens from a `TokenFaucet` contract and prints the latest state of the contract.\n\nThe script first imports necessary libraries such as `Deployments` from `@oxygenium/cli`, `web3`, `Project`, and `DUST_AMOUNT` from `@oxygenium/web3`, and `testNodeWallet` from `@oxygenium/web3-test`. It also imports `configuration` from `../oxygenium.config` and `TokenFaucet` and `Withdraw` from `../artifacts/ts`.\n\nThe `withdraw()` function is an asynchronous function that performs the following steps:\n\n1. Sets the current node provider to `http://127.0.0.1:22973`.\n2. Builds the contracts of the project if they are not compiled.\n3. Retrieves a test wallet for demonstration purposes.\n4. Loads the deployments from the configuration file for the `devnet` network.\n5. Iterates through each account in the test wallet and performs the following steps:\n   1. Sets the active account to prepare and sign transactions.\n   2. Retrieves the metadata of the deployed `TokenFaucet` contract in the account's group.\n   3. If the contract is not deployed in the group, the script logs a message and continues to the next account.\n   4. Otherwise, the script retrieves the contract ID and address.\n   5. Submits a transaction to withdraw tokens from the `TokenFaucet` contract using the `Withdraw` transaction script.\n   6. Retrieves the latest state of the `TokenFaucet` contract using the `TokenFaucet` contract instance.\n   7. Prints the state of the contract.\n\nFinally, the `withdraw()` function is called to execute the script.\n\nThis code can be used as a reference for developers who want to interact with smart contracts on the Oxygenium blockchain using the `@oxygenium/web3` library. Developers can modify the code to interact with other contracts and networks by changing the configuration file and the contract names.",
      "questions": "1. What is the purpose of this code?\n- This code is for withdrawing tokens from a deployed contract on the Oxygenium network using a test wallet.\n\n2. What dependencies are being used in this code?\n- This code is using dependencies from '@oxygenium/cli', '@oxygenium/web3', '@oxygenium/web3-test', and '../artifacts/ts'.\n\n3. What network is being used for this code?\n- This code is using the 'devnet' network as specified in the 'configuration' object."
    }
  ],
  "folders": [],
  "summary": "The `token.ts` file in the `oxygenium-web3` project demonstrates how to interact with a smart contract deployed on the Oxygenium blockchain using the `@oxygenium/web3` library. The script specifically focuses on withdrawing tokens from a `TokenFaucet` contract and printing the latest state of the contract.\n\nTo achieve this, the script imports necessary libraries and modules, such as `Deployments` from `@oxygenium/cli`, `web3`, `Project`, and `DUST_AMOUNT` from `@oxygenium/web3`, and `testNodeWallet` from `@oxygenium/web3-test`. It also imports `configuration` from `../oxygenium.config` and `TokenFaucet` and `Withdraw` from `../artifacts/ts`.\n\nThe main function in the script is the asynchronous `withdraw()` function, which performs the following steps:\n\n1. Sets the current node provider to `http://127.0.0.1:22973`.\n2. Builds the contracts of the project if they are not compiled.\n3. Retrieves a test wallet for demonstration purposes.\n4. Loads the deployments from the configuration file for the `devnet` network.\n5. Iterates through each account in the test wallet and performs the following steps:\n   1. Sets the active account to prepare and sign transactions.\n   2. Retrieves the metadata of the deployed `TokenFaucet` contract in the account's group.\n   3. If the contract is not deployed in the group, the script logs a message and continues to the next account.\n   4. Otherwise, the script retrieves the contract ID and address.\n   5. Submits a transaction to withdraw tokens from the `TokenFaucet` contract using the `Withdraw` transaction script.\n   6. Retrieves the latest state of the `TokenFaucet` contract using the `TokenFaucet` contract instance.\n   7. Prints the state of the contract.\n\nThe `withdraw()` function is called at the end of the script to execute the token withdrawal process.\n\nThis code serves as a reference for developers who want to interact with smart contracts on the Oxygenium blockchain using the `@oxygenium/web3` library. Developers can modify the code to interact with other contracts and networks by changing the configuration file and the contract names. For example, to interact with a different contract, developers can import the contract artifacts and replace the `TokenFaucet` and `Withdraw` imports with the new contract and transaction script. Additionally, developers can change the node provider URL and network configuration to work with different networks.",
  "questions": ""
}