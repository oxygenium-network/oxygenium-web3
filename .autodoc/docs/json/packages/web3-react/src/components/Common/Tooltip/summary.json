{
  "folderName": "Tooltip",
  "folderPath": ".autodoc/docs/json/packages/web3-react/src/components/Common/Tooltip",
  "url": "https://github.com/oxygenium/oxygenium-web3/.autodoc/docs/json/packages/web3-react/src/components/Common/Tooltip",
  "files": [
    {
      "fileName": "index.tsx",
      "filePath": "packages/web3-react/src/components/Common/Tooltip/index.tsx",
      "url": "https://github.com/oxygenium/oxygenium-web3/packages/web3-react/src/components/Common/Tooltip/index.tsx",
      "summary": "This code defines a React component called `Tooltip` that renders a tooltip window with a message when the user hovers over or clicks on a target element. The tooltip is positioned relative to the target element and can be customized with an offset and a delay. The component uses the `useOxygeniumConnectContext` hook to access the current route, theme, and mode of the Oxygenium Connect app.\n\nThe `Tooltip` component uses several React hooks to manage its state and layout. The `useState` hook is used to manage the `isOpen` state of the tooltip window, which is initially set to `false`. The `useMeasure` hook is used to measure the size and position of the target element and the tooltip window. The `useLayoutEffect` hook is used to update the layout of the tooltip window when the target element or the `isOpen` state changes. The `useEffect` hook is used to update the `isOpen` state when the `open` prop or the `context.open` state changes.\n\nThe `Tooltip` component uses the `motion` component from the `framer-motion` library to animate the opening and closing of the tooltip window. The `Portal` component is used to render the tooltip window outside the current React tree, which allows it to be positioned relative to the target element even if the target element is inside a container with a `overflow: hidden` style.\n\nThe `Tooltip` component exports a default function that takes several props:\n\n- `children`: the target element that triggers the tooltip window\n- `message`: the message to display in the tooltip window\n- `open`: a boolean that controls the visibility of the tooltip window\n- `xOffset`: the horizontal offset of the tooltip window relative to the target element\n- `yOffset`: the vertical offset of the tooltip window relative to the target element\n- `delay`: the delay before the tooltip window opens, in seconds\n\nHere is an example of how to use the `Tooltip` component:\n\n```jsx\nimport Tooltip from 'oxygenium-web3/components/Tooltip'\n\nfunction MyComponent() {\n  return (\n    <Tooltip message=\"Hello, world!\" xOffset={10} yOffset={-10}>\n      <button>Hover me</button>\n    </Tooltip>\n  )\n}\n```\n\nThis will render a button that displays a tooltip window with the message \"Hello, world!\" when the user hovers over it. The tooltip window will be positioned 10 pixels to the right and 10 pixels above the button.",
      "questions": "1. What is the purpose of this code and how is it used in the Oxygenium project?\n- This code is a React component for rendering tooltips and is used in the Oxygenium project for displaying information to users when they hover over certain elements.\n\n2. What are the dependencies of this code and what do they do?\n- This code has dependencies on the `react`, `react-use-measure`, `framer-motion`, and `oxygeniumConnect` packages. `react` is the core library for building the UI, `react-use-measure` is used for measuring the size and position of elements, `framer-motion` is used for animating the tooltip, and `oxygeniumConnect` is a custom context used for managing the state of the Oxygenium wallet.\n\n3. What are the conditions under which the tooltip is displayed and how is it positioned?\n- The tooltip is displayed when the user hovers over the element or when the `open` prop is set to `true`. The tooltip is positioned relative to the element being hovered over, with an optional offset specified by the `xOffset` and `yOffset` props. The code also checks if the tooltip is out of bounds of the viewport and adjusts its position accordingly."
    },
    {
      "fileName": "styles.ts",
      "filePath": "packages/web3-react/src/components/Common/Tooltip/styles.ts",
      "url": "https://github.com/oxygenium/oxygenium-web3/packages/web3-react/src/components/Common/Tooltip/styles.ts",
      "summary": "This file contains styled components for a tooltip window that can be used in the Oxygenium web3 project. The tooltip window is a UI element that displays additional information when the user hovers over a specific element on the page. \n\nThe `TooltipWindow` component is a fixed-position element that covers the entire viewport and has a high z-index to ensure it appears above all other elements on the page. It has `pointer-events: none` to allow mouse events to pass through to the underlying elements. \n\nThe `TooltipContainer` component is the actual tooltip that appears when the user hovers over an element. It is an absolutely positioned element that is centered on the hovered element and has a border, padding, and background color to distinguish it from the rest of the page. It also has a shadow and a tail that points to the hovered element. The size of the tooltip can be customized using the `$size` prop, which is of type `TooltipSizeProps`. \n\nThe `TooltipTail` component is the tail of the tooltip that points to the hovered element. It is an absolutely positioned element that is centered on the right edge of the tooltip and has a triangular shape. The size of the tail can also be customized using the `$size` prop. \n\nThese components are styled using CSS variables that are defined elsewhere in the project. The `styled` function is imported from the `styled-components` library, which allows for easy creation of reusable styled components. \n\nOverall, these components provide a customizable and visually appealing tooltip window that can be used throughout the Oxygenium web3 project to enhance the user experience. Here is an example of how the `TooltipContainer` component can be used:\n\n```\nimport { TooltipContainer } from 'oxygenium-web3'\n\nfunction MyComponent() {\n  return (\n    <div>\n      <button>Hover me</button>\n      <TooltipContainer $size=\"small\">\n        This is a tooltip!\n      </TooltipContainer>\n    </div>\n  )\n}\n```",
      "questions": "1. What is the purpose of this code and what does it do?\n- This code defines styled components for a tooltip window, container, and tail using the framer-motion library.\n\n2. What license is this code released under?\n- This code is released under the GNU Lesser General Public License, version 3 or later.\n\n3. What dependencies does this code have?\n- This code imports the `motion` object from the `framer-motion` library and a `TooltipSizeProps` type from a local `types` module. It also imports a `styled` function from a local `styled` module."
    },
    {
      "fileName": "types.ts",
      "filePath": "packages/web3-react/src/components/Common/Tooltip/types.ts",
      "url": "https://github.com/oxygenium/oxygenium-web3/packages/web3-react/src/components/Common/Tooltip/types.ts",
      "summary": "This file contains two TypeScript type definitions for a tooltip component that can be used in the Oxygenium project. The first type definition, `TooltipSizeProps`, is a union type that specifies the possible sizes of the tooltip. The two possible values are `'small'` and `'large'`. \n\nThe second type definition, `TooltipProps`, specifies the props that can be passed to the tooltip component. These props include:\n\n- `message`: A string or React node that represents the content of the tooltip.\n- `children`: A React node that represents the element that the tooltip is attached to.\n- `open`: A boolean that determines whether the tooltip is currently visible.\n- `xOffset`: A number that specifies the horizontal offset of the tooltip from its attached element.\n- `yOffset`: A number that specifies the vertical offset of the tooltip from its attached element.\n- `delay`: A number that specifies the delay (in milliseconds) before the tooltip is displayed.\n\nThese type definitions can be used to ensure that the tooltip component is used correctly throughout the Oxygenium project. For example, when defining a tooltip component, the `TooltipProps` type can be used to specify the expected props:\n\n```typescript\nimport { TooltipProps } from 'oxygenium-web3'\n\nconst MyTooltip = ({ message, children, open, xOffset, yOffset, delay }: TooltipProps) => {\n  // ...\n}\n```\n\nOverall, this file provides a useful abstraction for creating and using tooltips in the Oxygenium project, making it easier to maintain and update the tooltip component in the future.",
      "questions": "1. What is the purpose of this file?\n- This file contains a type definition for `TooltipProps` and `TooltipSizeProps`, which are used for defining the props of a tooltip component.\n\n2. What are the possible values for `TooltipSizeProps`?\n- The possible values for `TooltipSizeProps` are `'small'` and `'large'`.\n\n3. What are the optional props that can be passed to the `TooltipProps` type?\n- The optional props that can be passed to the `TooltipProps` type are `message`, `children`, `open`, `xOffset`, `yOffset`, and `delay`."
    }
  ],
  "folders": [],
  "summary": "The `Tooltip` component in the `oxygenium-web3` project provides a customizable and visually appealing tooltip window that can be used throughout the project to enhance the user experience. The component is defined in the `index.tsx` file and uses several React hooks to manage its state and layout. It also uses the `motion` component from the `framer-motion` library for animations and the `Portal` component to render the tooltip window outside the current React tree.\n\nThe `Tooltip` component accepts several props, such as `message`, `open`, `xOffset`, `yOffset`, and `delay`. These props allow developers to customize the tooltip's content, visibility, position, and display delay. For example:\n\n```jsx\nimport Tooltip from 'oxygenium-web3/components/Tooltip'\n\nfunction MyComponent() {\n  return (\n    <Tooltip message=\"Hello, world!\" xOffset={10} yOffset={-10}>\n      <button>Hover me</button>\n    </Tooltip>\n  )\n}\n```\n\nThis example renders a button that displays a tooltip window with the message \"Hello, world!\" when the user hovers over it. The tooltip window will be positioned 10 pixels to the right and 10 pixels above the button.\n\nThe `styles.ts` file contains styled components for the tooltip window, such as `TooltipWindow`, `TooltipContainer`, and `TooltipTail`. These components are styled using CSS variables and the `styled` function from the `styled-components` library. This allows for easy creation of reusable styled components that can be used throughout the Oxygenium web3 project.\n\nThe `types.ts` file contains TypeScript type definitions for the tooltip component, such as `TooltipSizeProps` and `TooltipProps`. These type definitions ensure that the tooltip component is used correctly throughout the Oxygenium project and make it easier to maintain and update the component in the future.\n\nIn summary, the `Tooltip` component in the `oxygenium-web3` project provides a flexible and visually appealing way to display additional information when the user hovers over a specific element on the page. The component is defined in the `index.tsx` file, styled in the `styles.ts` file, and has its types defined in the `types.ts` file. This modular approach makes it easy to maintain and update the tooltip component as the project evolves.",
  "questions": ""
}